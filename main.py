import pandas as pd
data = [1, 2, 3, 4, 5]
series = pd.Series(data)
print(series)
data = {
    'Name': '',
    'Age': '',
    'City': ''
}
data = {
    'Name': ['Alice', 'Bob', 'Roma', 'Anna'],
    'Age': [23, 45, 17, 24],
    'City': ['New York', 'LA', 'Chicago', 'Moscow']
}
#3. Преобразуем созданный словарь data в датафрейм, то есть,
# в таблицу. Для этого используем функцию df (сокращение от dataframe).
# Прописываем:

df = pd.DataFrame(data)



#4. Посмотрим, что получилось, для этого пишем: print(df) и,
# щёлкнув правой кнопкой мыши, выбираем в открывшемся списке Run,
# тем самым запуская код.
print(df)


#Основные функции Pandas
#Перейдём к работе с готовым датасетом, который мы скачали с сайта
# Kaggle. Для этого используем функцию, считывающую информацию
# из csv-файлов. В круглых скобках указываем название
# файла (его можно скопировать, щёлкнув по файлу правой кнопкой
# мыши и выбрав в списке Copy.
#С помощью функции head вывести пять первых строк,
# хранящихся в csv-файле. Можно вывести и большее/меньшее
# количество строк — для этого надо указать точное их количество
# в круглых скобках после прописанной функции. Для этого прописываем:
# print(df.head()) и запускаем (Run).
#В окне вывода мы видим первые пять строк датасета.
# При этом столбец с многоточиями указывает на то, что между
# колонками пропущено ещё какое-то количество столбцов — это
# происходит потому, что вся таблица не умещается в окне вывода.
# Однако мы можем видеть информацию о том, что в датасете
# имеется 12 колонок.
df = pd.read_csv('2015.csv')
#3. Если нужно просмотреть последние строки датасета,
# вместо функции head используем функцию tail, для
# этого пишем: print(df.tail()) Таким образом, мы можем узнать,
# что в этом датасете всего 142 строки.
print(df.head())
#4. Чтобы посмотреть базовую информацию о датафрейме,
# используем функцию info. Прописываем: print(df.info())
#Здесь выводится информация о том, сколько всего данных
# содержится в датасете, названия всех столбцов и какое
# количество столбцов содержит в себе информацию, а также
# тип хранящихся данных, сколько памяти тратится.

print(df.info())
#5. Информацию о датафрейме также можно почерпнуть,
# прописав функцию describe. Эта функция позволяет
# получить статистические данные: найти минимальные,
# максимальные и средние значения, количество и т.д.
# Для этого прописываем: print(df.describe())
print(df.describe())
#Также с помощью функций можно выводить конкретную информацию,
# например, сведения из определённого столбца.
# Для этого используем название датафрейма (df) и название
# интересующего столбца. Прописываем:
print(df["Country name"])